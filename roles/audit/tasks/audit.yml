---
# tasks file for audit

- name: Collect only os_family facts
  ansible.builtin.setup:
    gather_subset:
      - '!all'
      - os_family

# - name: Gather facts on listening ports
#   community.general.listen_ports_facts:

- name: Check connections
  ansible.builtin.command:
    cmd: >
      ss -tupn
  register: ss_ports

- name: Check ports
  ansible.builtin.command:
    cmd: >
      ss -tupnl
  register: ss_connections

# - name: List all ports
#   ansible.builtin.debug:
#     msg: "{{ item.port }} {{ item.protocol }} {{ item.pid }} {{ item.name }}"
#   loop: "{{ (ansible_facts.tcp_listen + ansible_facts.udp_listen) }}"
#   loop_control:
#     label: "{{ item.port }}"


- name: Check empty password
  ansible.builtin.command:
    cmd: >
      awk -F: '($2 == "") {print}' /etc/shadow
  register: empty_passwords

# - name: List users wuth empty password
#   ansible.builtin.debug:
#     msg: "{{ empty_passwords.stdout_lines }}"


- name: Check root uid
  ansible.builtin.command:
    cmd: >
      awk -F: '($3 == "0") {print}' /etc/passwd
  register: root_uid

# - name: List users with UID=0
#   ansible.builtin.debug:
#     msg: "{{ root_uid.stdout_lines }}"


- name: Check SUID binaries
  ansible.builtin.shell:
    cmd: >
      find / -perm /4000 -print 2> /dev/null || true
  register: suid_binaries

- name: Check SGID binaries
  ansible.builtin.shell:
    cmd: >
      find / -perm /2000 -print 2> /dev/null || true
  register: sgid_binaries

# - name: List SUID binaries
#   ansible.builtin.debug:
#     msg: "{{ suid_binaries.stdout_lines }}"

# - name: List SGID binaries
#   ansible.builtin.debug:
#     msg: "{{ sgid_binaries.stdout_lines }}"


- name: Check World-Writable files
  ansible.builtin.shell:
    cmd: >
      find / -xdev -type f \( -perm -0002 -a ! -perm -1000 \) -print
  register: world_writable_files

- name: Check World-Writable directories
  ansible.builtin.shell:
    cmd: >
      find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print
  register: world_writable_directories

# - name: List World-Writable files
#   ansible.builtin.debug:
#     msg: "{{ world_writable_files.stdout_lines }}"

# - name: List World-Writable directories
#   ansible.builtin.debug:
#     msg: "{{ world_writable_directories.stdout_lines }}"

- name: Check noowner files
  ansible.builtin.shell:
    cmd: >
      find / -xdev -type f \( -nouser -o -nogroup \) -print
  register: noowner_files

- name: Check noowner directories
  ansible.builtin.shell:
    cmd: >
      find / -xdev -type d \( -nouser -o -nogroup \) -print
  register: noowner_directories

# - name: List noowner files
#   ansible.builtin.debug:
#     msg: "{{ noowner_files.stdout_lines }}"

# - name: List noowner directories
#   ansible.builtin.debug:
#     msg: "{{ noowner_directories.stdout_lines }}"

- name: Check mounts
  ansible.builtin.shell:
    cmd: >
      cat /proc/mounts
  register: mounts

- name: Check crontab
  ansible.builtin.shell:
    cmd: >
      cat /etc/crontab  || true
  register: crontab

- name: Check processes
  ansible.builtin.shell:
    cmd: >
      ps auxeww
  register: processes

- name: Check DEB-packages
  ansible.builtin.shell:
    cmd: >
      dpkg --verify
  register: package_check
  when: ansible_facts['os_family'] == "Debian"

- name: Check RPM-packages
  ansible.builtin.shell:
    cmd: >
      dnf check
  register: package_check
  when: ansible_facts['os_family'] == "RedHat"

- name: Creating a file with content
  become: false
  ansible.builtin.copy:
    dest: "{{ audit_dir }}/{{ item.name }}"
    content: "{{ item.value }}"
    mode: '0600'
  loop:
    # - { name: "ports.json", value: "{{ (ansible_facts.tcp_listen + ansible_facts.udp_listen) | to_nice_json }}" }
    - { name: "connections.txt", value: "{{ ss_connections.stdout|default(\"no information\") }}" }
    - { name: "ports.txt", value: "{{ ss_ports.stdout|default(\"no information\") }}" }
    - { name: "empty-passwords.txt", value: "{{ empty_passwords.stdout|default(\"no information\") }}" }
    - { name: "root-uids.txt", value: "{{ root_uid.stdout|default(\"no information\") }}" }
    - { name: "suid.txt", value: "{{ suid_binaries.stdout|default(\"no information\") }}" }
    - { name: "sgid.txt", value: "{{ sgid_binaries.stdout|default(\"no information\") }}" }
    - { name: "world-writeble-files.txt", value: "{{ world_writable_files.stdout|default(\"no information\") }}" }
    - { name: "world-writeble-directories.txt", value: "{{ world_writable_directories.stdout|default(\"no information\") }}" }
    - { name: "noowner-files.txt", value: "{{ noowner_files.stdout_lines }}" }
    - { name: "noowner-directories.txt", value: "{{ noowner_directories.stdout_lines }}" }
    - { name: "mounts.txt", value: "{{ mounts.stdout|default(\"no information\") }}" }
    - { name: "crontab.txt", value: "{{ crontab.stdout|default(\"no information\") }}" }
    - { name: "processes.txt", value: "{{ processes.stdout|default(\"no information\") }}" }
    - { name: "package-check.txt", value: "{{ package_check.stdout|default(\"no information\") }}" }
  delegate_to: localhost
  loop_control:
    label: "audit"
